% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_plane_uv_mesh.R
\name{add_plane_uv_mesh}
\alias{add_plane_uv_mesh}
\title{Add Plane UV Mapping to Mesh}
\usage{
add_plane_uv_mesh(
  mesh,
  direction = c(0, 1, 0),
  up = c(0, 1, 0),
  override_existing = FALSE,
  full_mesh_bbox = TRUE
)
}
\arguments{
\item{mesh}{The mesh to which the UV mapping will be applied.}

\item{direction}{Default \code{c(0, 1, 0)}. A vector specifying the direction for
UV mapping. The function normalizes this vector.}

\item{up}{Default \code{c(0, 1, 0)}. A vector specifying the up direction.}

\item{override_existing}{Default \code{FALSE}. Specifies whether existing UV
coordinates should be overridden.}

\item{full_mesh_bbox}{Default \code{TRUE}. Specifies whether the full mesh's
bounding box is used for UV mapping.}
}
\value{
Modified mesh with added UV mapping.
}
\description{
Applies a planar UV mapping to a mesh based on a given direction.
If \code{full_mesh_bbox} is true, the UV mapping is scaled based on the bounding box
of the entire mesh. If false, each shape's bounding box is used.
}
\examples{
if(rayvertex:::run_documentation()) {
#Let's construct a mesh from the volcano dataset
#Build the vertex matrix
vertex_list = list()
counter = 1
for(i in 1:nrow(volcano)) {
  for(j in 1:ncol(volcano)) {
    vertex_list[[counter]] = matrix(c(j,volcano[i,j],i), ncol=3)
    counter = counter + 1
  }
}
vertices = do.call(rbind,vertex_list)

#Build the index matrix
index_list = list()
counter = 0
for(i in 1:(nrow(volcano)-1)) {
  for(j in 1:(ncol(volcano)-1)) {
    index_list[[counter+1]] = matrix(c(counter,counter+ncol(volcano),counter+1,
                                       counter+ncol(volcano),counter+ncol(volcano)+1,counter + 1), 
                                     nrow=2, ncol=3, byrow=TRUE)
    counter = counter + 1
  }
  counter = counter + 1
}
indices = do.call(rbind,index_list)

#Construct the mesh
volc_mesh = construct_mesh(vertices = vertices, indices = indices,
                           material = material_list(type="phong", diffuse="darkred", 
                                                    ambient = "darkred", ambient_intensity=0.2))
add_plane_uv_mesh(volc_mesh, direction=c(-50,230,100))->uv
uv = set_material(uv, texture_location = "~/Desktop/diamondcali.png")
#Rasterize the scene
rasterize_scene(uv, lookfrom=c(-50,230,100),fov=0,width=1200,height=1200,
                light_info = directional_light(c(0,1,1)) |>
                  add_light(directional_light(c(1,1,-1))),ortho_dimensions=c(200,200))
}
}
